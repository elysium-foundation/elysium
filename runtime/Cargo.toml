[package]
authors = ["BloxBytes"]
edition = "2021"
repository = "https://github.com/ElysiumOffical/elysium"
description = "Elysium provides the lightning-fast transaction speeds and unprecedented scalability. Elysium is optimized for your Game, NFT, AI, or metaverse project."
homepage = 'https://elysiumchain.tech/'
license = 'GPL-3.0-only'
name = 'elysium-runtime'
publish = false
version = '8.0.0'

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
serde = { workspace = true, optional = true }
smallvec = { workspace = true }
scale-codec = { package = "parity-scale-codec", workspace = true }
scale-info = { workspace = true }

# Substrate
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-io = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }

# Substrate FRAME
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
pallet-aura = { workspace = true }
pallet-balances = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }

## Used for runtime api
frame-system-rpc-runtime-api = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-multisig = { workspace = true }
pallet-node-authorization = { workspace = true }
pallet-session = { workspace = true }
#pallet-elysium = { workspace = true }
substrate-validator-set = { workspace = true }
pallet-authorship = { workspace = true }

## Used for runtime benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }

# Frontier
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true }

# Frontier FRAME
pallet-base-fee = { workspace = true }
pallet-dynamic-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-hotfix-sufficients = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
log = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
default = ["std", "aura", "with-rocksdb-weights"]
aura = []
manual-seal = ["with-rocksdb-weights"]
with-rocksdb-weights = []
with-paritydb-weights = []
std = [
    "serde",
    # Parity
    "scale-codec/std",
    "scale-info/std",
    # Substrate
    "sp-api/std",
    "sp-block-builder/std",
    "sp-consensus-aura/std",
    "sp-core/std",
    "sp-inherents/std",
    "sp-io/std",
    "sp-offchain/std",
    "sp-runtime/std",
    "sp-session/std",
    "sp-std/std",
    "sp-transaction-pool/std",
    "sp-version/std",
    # Substrate FRAME
    "frame-executive/std",
    "frame-support/std",
    "frame-system/std",
    "pallet-aura/std",
    "pallet-balances/std",
    "pallet-grandpa/std",
    "pallet-sudo/std",
    "pallet-timestamp/std",
    "pallet-transaction-payment/std",
    ## Used for runtime api
    "frame-system-rpc-runtime-api/std",
    "pallet-transaction-payment-rpc-runtime-api/std",
    # Frontier
    "fp-rpc/std",
    "fp-self-contained/std",
    # Frontier FRAME
    "pallet-base-fee/std",
    "pallet-dynamic-fee/std",
    "pallet-ethereum/std",
    "pallet-evm/std",
    "pallet-evm-chain-id/std",
    "pallet-evm-precompile-modexp/std",
    "pallet-evm-precompile-sha3fips/std",
    "pallet-evm-precompile-simple/std",
    "pallet-hotfix-sufficients/std",
    'pallet-multisig/std',
    'pallet-node-authorization/std',
#    'pallet-elysium/std',
    'substrate-validator-set/std',
    'pallet-session/std',
    'log/std'
]
runtime-benchmarks = [
    "frame-benchmarking",
    "frame-system-benchmarking",
    "frame-system/runtime-benchmarks",
    "pallet-balances/runtime-benchmarks",
    "pallet-grandpa/runtime-benchmarks",
    "pallet-timestamp/runtime-benchmarks",
    "pallet-ethereum/runtime-benchmarks",
    "pallet-evm/runtime-benchmarks",
    "pallet-hotfix-sufficients/runtime-benchmarks",
]